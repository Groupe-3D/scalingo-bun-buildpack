#!/bin/bash
set -e

BUILD_DIR=$1
CACHE_DIR=$2

echo "-----> Starting Bun Buildpack"

# Ensure required tools are installed
command -v curl > /dev/null || { echo "curl is required but not installed"; exit 1; }
command -v unzip > /dev/null || { echo "unzip is required but not installed"; exit 1; }

# Restore Bun from cache if available
BUN_DIR="$BUILD_DIR/.scalingo/bun"
if [ -d "$CACHE_DIR/.scalingo/bun" ]; then
    echo "-----> Restoring Bun from cache"
    cp -R $CACHE_DIR/.scalingo/bun $BUN_DIR
else
    echo "-----> Bun cache not found, downloading..."
    mkdir -p $BUN_DIR
    BUN_VERSION="1.1.38"
    BUN_DISTRO="linux-x64"
    BUN_BINARY="bun-${BUN_DISTRO}"
    BUN_URL="https://github.com/oven-sh/bun/releases/download/bun-v$BUN_VERSION/${BUN_BINARY}.zip"

    curl -fsSL $BUN_URL -o bun.zip
    unzip -qo bun.zip -d $BUN_DIR
    chmod +x $BUN_DIR/${BUN_BINARY}/bun
    rm bun.zip
fi

# Add Bun's PATH for build
export PATH="$BUN_DIR/bun-linux-x64:$BUILD_DIR/.bin:$BUILD_DIR/node_modules/.bin:$PATH"

# Persist Bun PATH and environment variables for runtime
echo "-----> Creating .profile.d/bun.sh for runtime configuration"
mkdir -p "$BUILD_DIR/.profile.d"
cat > "$BUILD_DIR/.profile.d/bun.sh" <<EOF
# Add Bun to PATH
export PATH="/app/.scalingo/bun/bun-linux-x64:/app/.bin:\$PATH"

# Add node_modules/.bin to PATH
export PATH="/app/node_modules/.bin:\$PATH"

# Set NODE_ENV to production by default
export NODE_ENV="\${NODE_ENV:-production}"
EOF

chmod +x "$BUILD_DIR/.profile.d/bun.sh"

# Install dependencies with Bun
echo "-----> Installing dependencies with Bun"
cd $BUILD_DIR
$BUN_DIR/bun-linux-x64/bun install --cache || {
  echo "bun install failed."
  exit 1
}

# Remove Husky hooks after bun install
if [ -d ".husky" ]; then
    echo "-----> Removing Husky hooks in build environment"
    rm -rf .husky
fi

# Run build script if specified
if grep -q '"build":' package.json; then
    echo "-----> Running build script"
    $BUN_DIR/bun-linux-x64/bun run build || {
      echo "Build script failed."
      exit 1
    }
else
    echo "No build script found. Skipping."
fi

# Cache Bun for future builds
echo "-----> Caching Bun"
rm -rf $CACHE_DIR/*
cp -R $BUN_DIR $CACHE_DIR

echo "-----> Bun Buildpack completed"
